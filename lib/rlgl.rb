# Yet another raylib wrapper for Ruby
#
# * https://github.com/vaiorabbit/raylib-bindings
#
# [NOTICE] Autogenerated. Do not edit.

require 'ffi'

module Raylib
  extend FFI::Library
  # Define/Macro

  RLGL_VERSION = "4.0"
  RL_DEFAULT_BATCH_BUFFER_ELEMENTS = 8192
  RL_DEFAULT_BATCH_BUFFERS = 1
  RL_DEFAULT_BATCH_DRAWCALLS = 256
  RL_DEFAULT_BATCH_MAX_TEXTURE_UNITS = 4
  RL_MAX_MATRIX_STACK_SIZE = 32
  RL_MAX_SHADER_LOCATIONS = 32
  RL_CULL_DISTANCE_NEAR = 0.01
  RL_CULL_DISTANCE_FAR = 1000.0
  RL_TEXTURE_WRAP_S = 0x2802
  RL_TEXTURE_WRAP_T = 0x2803
  RL_TEXTURE_MAG_FILTER = 0x2800
  RL_TEXTURE_MIN_FILTER = 0x2801
  RL_TEXTURE_FILTER_NEAREST = 0x2600
  RL_TEXTURE_FILTER_LINEAR = 0x2601
  RL_TEXTURE_FILTER_MIP_NEAREST = 0x2700
  RL_TEXTURE_FILTER_NEAREST_MIP_LINEAR = 0x2702
  RL_TEXTURE_FILTER_LINEAR_MIP_NEAREST = 0x2701
  RL_TEXTURE_FILTER_MIP_LINEAR = 0x2703
  RL_TEXTURE_FILTER_ANISOTROPIC = 0x3000
  RL_TEXTURE_MIPMAP_BIAS_RATIO = 0x4000
  RL_TEXTURE_WRAP_REPEAT = 0x2901
  RL_TEXTURE_WRAP_CLAMP = 0x812F
  RL_TEXTURE_WRAP_MIRROR_REPEAT = 0x8370
  RL_TEXTURE_WRAP_MIRROR_CLAMP = 0x8742
  RL_MODELVIEW = 0x1700
  RL_PROJECTION = 0x1701
  RL_TEXTURE = 0x1702
  RL_LINES = 0x0001
  RL_TRIANGLES = 0x0004
  RL_QUADS = 0x0007
  RL_UNSIGNED_BYTE = 0x1401
  RL_FLOAT = 0x1406
  RL_STREAM_DRAW = 0x88E0
  RL_STREAM_READ = 0x88E1
  RL_STREAM_COPY = 0x88E2
  RL_STATIC_DRAW = 0x88E4
  RL_STATIC_READ = 0x88E5
  RL_STATIC_COPY = 0x88E6
  RL_DYNAMIC_DRAW = 0x88E8
  RL_DYNAMIC_READ = 0x88E9
  RL_DYNAMIC_COPY = 0x88EA
  RL_FRAGMENT_SHADER = 0x8B30
  RL_VERTEX_SHADER = 0x8B31
  RL_COMPUTE_SHADER = 0x91B9
  RL_ZERO = 0
  RL_ONE = 1
  RL_SRC_COLOR = 0x0300
  RL_ONE_MINUS_SRC_COLOR = 0x0301
  RL_SRC_ALPHA = 0x0302
  RL_ONE_MINUS_SRC_ALPHA = 0x0303
  RL_DST_ALPHA = 0x0304
  RL_ONE_MINUS_DST_ALPHA = 0x0305
  RL_DST_COLOR = 0x0306
  RL_ONE_MINUS_DST_COLOR = 0x0307
  RL_SRC_ALPHA_SATURATE = 0x0308
  RL_CONSTANT_COLOR = 0x8001
  RL_ONE_MINUS_CONSTANT_COLOR = 0x8002
  RL_CONSTANT_ALPHA = 0x8003
  RL_ONE_MINUS_CONSTANT_ALPHA = 0x8004
  RL_FUNC_ADD = 0x8006
  RL_FUNC_SUBTRACT = 0x800A
  RL_FUNC_REVERSE_SUBTRACT = 0x800B
  RL_BLEND_EQUATION = 0x8009
  RL_BLEND_EQUATION_RGB = 0x8009
  RL_BLEND_EQUATION_ALPHA = 0x883D
  RL_BLEND_DST_RGB = 0x80C8
  RL_BLEND_SRC_RGB = 0x80C9
  RL_BLEND_DST_ALPHA = 0x80CA
  RL_BLEND_SRC_ALPHA = 0x80CB
  RL_BLEND_COLOR = 0x8005

  # Enum

  RL_OPENGL_11 = 1
  RL_OPENGL_21 = 2
  RL_OPENGL_33 = 3
  RL_OPENGL_43 = 4
  RL_OPENGL_ES_20 = 5
  RL_LOG_ALL = 0
  RL_LOG_TRACE = 1
  RL_LOG_DEBUG = 2
  RL_LOG_INFO = 3
  RL_LOG_WARNING = 4
  RL_LOG_ERROR = 5
  RL_LOG_FATAL = 6
  RL_LOG_NONE = 7
  RL_PIXELFORMAT_UNCOMPRESSED_GRAYSCALE = 1
  RL_PIXELFORMAT_UNCOMPRESSED_GRAY_ALPHA = 2
  RL_PIXELFORMAT_UNCOMPRESSED_R5G6B5 = 3
  RL_PIXELFORMAT_UNCOMPRESSED_R8G8B8 = 4
  RL_PIXELFORMAT_UNCOMPRESSED_R5G5B5A1 = 5
  RL_PIXELFORMAT_UNCOMPRESSED_R4G4B4A4 = 6
  RL_PIXELFORMAT_UNCOMPRESSED_R8G8B8A8 = 7
  RL_PIXELFORMAT_UNCOMPRESSED_R32 = 8
  RL_PIXELFORMAT_UNCOMPRESSED_R32G32B32 = 9
  RL_PIXELFORMAT_UNCOMPRESSED_R32G32B32A32 = 10
  RL_PIXELFORMAT_COMPRESSED_DXT1_RGB = 11
  RL_PIXELFORMAT_COMPRESSED_DXT1_RGBA = 12
  RL_PIXELFORMAT_COMPRESSED_DXT3_RGBA = 13
  RL_PIXELFORMAT_COMPRESSED_DXT5_RGBA = 14
  RL_PIXELFORMAT_COMPRESSED_ETC1_RGB = 15
  RL_PIXELFORMAT_COMPRESSED_ETC2_RGB = 16
  RL_PIXELFORMAT_COMPRESSED_ETC2_EAC_RGBA = 17
  RL_PIXELFORMAT_COMPRESSED_PVRT_RGB = 18
  RL_PIXELFORMAT_COMPRESSED_PVRT_RGBA = 19
  RL_PIXELFORMAT_COMPRESSED_ASTC_4x4_RGBA = 20
  RL_PIXELFORMAT_COMPRESSED_ASTC_8x8_RGBA = 21
  RL_TEXTURE_FILTER_POINT = 0
  RL_TEXTURE_FILTER_BILINEAR = 1
  RL_TEXTURE_FILTER_TRILINEAR = 2
  RL_TEXTURE_FILTER_ANISOTROPIC_4X = 3
  RL_TEXTURE_FILTER_ANISOTROPIC_8X = 4
  RL_TEXTURE_FILTER_ANISOTROPIC_16X = 5
  RL_BLEND_ALPHA = 0
  RL_BLEND_ADDITIVE = 1
  RL_BLEND_MULTIPLIED = 2
  RL_BLEND_ADD_COLORS = 3
  RL_BLEND_SUBTRACT_COLORS = 4
  RL_BLEND_ALPHA_PREMULTIPLY = 5
  RL_BLEND_CUSTOM = 6
  RL_BLEND_CUSTOM_SEPARATE = 7
  RL_SHADER_LOC_VERTEX_POSITION = 0
  RL_SHADER_LOC_VERTEX_TEXCOORD01 = 1
  RL_SHADER_LOC_VERTEX_TEXCOORD02 = 2
  RL_SHADER_LOC_VERTEX_NORMAL = 3
  RL_SHADER_LOC_VERTEX_TANGENT = 4
  RL_SHADER_LOC_VERTEX_COLOR = 5
  RL_SHADER_LOC_MATRIX_MVP = 6
  RL_SHADER_LOC_MATRIX_VIEW = 7
  RL_SHADER_LOC_MATRIX_PROJECTION = 8
  RL_SHADER_LOC_MATRIX_MODEL = 9
  RL_SHADER_LOC_MATRIX_NORMAL = 10
  RL_SHADER_LOC_VECTOR_VIEW = 11
  RL_SHADER_LOC_COLOR_DIFFUSE = 12
  RL_SHADER_LOC_COLOR_SPECULAR = 13
  RL_SHADER_LOC_COLOR_AMBIENT = 14
  RL_SHADER_LOC_MAP_ALBEDO = 15
  RL_SHADER_LOC_MAP_METALNESS = 16
  RL_SHADER_LOC_MAP_NORMAL = 17
  RL_SHADER_LOC_MAP_ROUGHNESS = 18
  RL_SHADER_LOC_MAP_OCCLUSION = 19
  RL_SHADER_LOC_MAP_EMISSION = 20
  RL_SHADER_LOC_MAP_HEIGHT = 21
  RL_SHADER_LOC_MAP_CUBEMAP = 22
  RL_SHADER_LOC_MAP_IRRADIANCE = 23
  RL_SHADER_LOC_MAP_PREFILTER = 24
  RL_SHADER_LOC_MAP_BRDF = 25
  RL_SHADER_UNIFORM_FLOAT = 0
  RL_SHADER_UNIFORM_VEC2 = 1
  RL_SHADER_UNIFORM_VEC3 = 2
  RL_SHADER_UNIFORM_VEC4 = 3
  RL_SHADER_UNIFORM_INT = 4
  RL_SHADER_UNIFORM_IVEC2 = 5
  RL_SHADER_UNIFORM_IVEC3 = 6
  RL_SHADER_UNIFORM_IVEC4 = 7
  RL_SHADER_UNIFORM_SAMPLER2D = 8
  RL_SHADER_ATTRIB_FLOAT = 0
  RL_SHADER_ATTRIB_VEC2 = 1
  RL_SHADER_ATTRIB_VEC3 = 2
  RL_SHADER_ATTRIB_VEC4 = 3
  RL_ATTACHMENT_COLOR_CHANNEL0 = 0
  RL_ATTACHMENT_COLOR_CHANNEL1 = 1
  RL_ATTACHMENT_COLOR_CHANNEL2 = 2
  RL_ATTACHMENT_COLOR_CHANNEL3 = 3
  RL_ATTACHMENT_COLOR_CHANNEL4 = 4
  RL_ATTACHMENT_COLOR_CHANNEL5 = 5
  RL_ATTACHMENT_COLOR_CHANNEL6 = 6
  RL_ATTACHMENT_COLOR_CHANNEL7 = 7
  RL_ATTACHMENT_DEPTH = 100
  RL_ATTACHMENT_STENCIL = 200
  RL_ATTACHMENT_CUBEMAP_POSITIVE_X = 0
  RL_ATTACHMENT_CUBEMAP_NEGATIVE_X = 1
  RL_ATTACHMENT_CUBEMAP_POSITIVE_Y = 2
  RL_ATTACHMENT_CUBEMAP_NEGATIVE_Y = 3
  RL_ATTACHMENT_CUBEMAP_POSITIVE_Z = 4
  RL_ATTACHMENT_CUBEMAP_NEGATIVE_Z = 5
  RL_ATTACHMENT_TEXTURE2D = 100
  RL_ATTACHMENT_RENDERBUFFER = 200
  RL_CULL_FACE_FRONT = 0
  RL_CULL_FACE_BACK = 1

  # Typedef

  typedef :int, :rlGlVersion
  typedef :int, :rlTraceLogLevel
  typedef :int, :rlPixelFormat
  typedef :int, :rlTextureFilter
  typedef :int, :rlBlendMode
  typedef :int, :rlShaderLocationIndex
  typedef :int, :rlShaderUniformDataType
  typedef :int, :rlShaderAttributeDataType
  typedef :int, :rlFramebufferAttachType
  typedef :int, :rlFramebufferAttachTextureType
  typedef :int, :rlCullMode

  # Struct

  class RlVertexBuffer < FFI::Struct
    layout(
      :elementCount, :int,
      :vertices, :pointer,
      :texcoords, :pointer,
      :colors, :pointer,
      :indices, :pointer,
      :vaoId, :uint,
      :vboId, [:uint, 4],
    )
  end

  class RlDrawCall < FFI::Struct
    layout(
      :mode, :int,
      :vertexCount, :int,
      :vertexAlignment, :int,
      :textureId, :uint,
    )
  end

  class RlRenderBatch < FFI::Struct
    layout(
      :bufferCount, :int,
      :currentBuffer, :int,
      :vertexBuffer, :pointer,
      :draws, :pointer,
      :drawCounter, :int,
      :currentDepth, :float,
    )
  end


  # Function

  def self.setup_rlgl_symbols(output_error = false)
    entries = [
      [:rlMatrixMode, [:int], :void],
      [:rlPushMatrix, [], :void],
      [:rlPopMatrix, [], :void],
      [:rlLoadIdentity, [], :void],
      [:rlTranslatef, [:float, :float, :float], :void],
      [:rlRotatef, [:float, :float, :float, :float], :void],
      [:rlScalef, [:float, :float, :float], :void],
      [:rlMultMatrixf, [:pointer], :void],
      [:rlFrustum, [:double, :double, :double, :double, :double, :double], :void],
      [:rlOrtho, [:double, :double, :double, :double, :double, :double], :void],
      [:rlViewport, [:int, :int, :int, :int], :void],
      [:rlBegin, [:int], :void],
      [:rlEnd, [], :void],
      [:rlVertex2i, [:int, :int], :void],
      [:rlVertex2f, [:float, :float], :void],
      [:rlVertex3f, [:float, :float, :float], :void],
      [:rlTexCoord2f, [:float, :float], :void],
      [:rlNormal3f, [:float, :float, :float], :void],
      [:rlColor4ub, [:uchar, :uchar, :uchar, :uchar], :void],
      [:rlColor3f, [:float, :float, :float], :void],
      [:rlColor4f, [:float, :float, :float, :float], :void],
      [:rlEnableVertexArray, [:uint], :bool],
      [:rlDisableVertexArray, [], :void],
      [:rlEnableVertexBuffer, [:uint], :void],
      [:rlDisableVertexBuffer, [], :void],
      [:rlEnableVertexBufferElement, [:uint], :void],
      [:rlDisableVertexBufferElement, [], :void],
      [:rlEnableVertexAttribute, [:uint], :void],
      [:rlDisableVertexAttribute, [:uint], :void],
      [:rlActiveTextureSlot, [:int], :void],
      [:rlEnableTexture, [:uint], :void],
      [:rlDisableTexture, [], :void],
      [:rlEnableTextureCubemap, [:uint], :void],
      [:rlDisableTextureCubemap, [], :void],
      [:rlTextureParameters, [:uint, :int, :int], :void],
      [:rlEnableShader, [:uint], :void],
      [:rlDisableShader, [], :void],
      [:rlEnableFramebuffer, [:uint], :void],
      [:rlDisableFramebuffer, [], :void],
      [:rlActiveDrawBuffers, [:int], :void],
      [:rlEnableColorBlend, [], :void],
      [:rlDisableColorBlend, [], :void],
      [:rlEnableDepthTest, [], :void],
      [:rlDisableDepthTest, [], :void],
      [:rlEnableDepthMask, [], :void],
      [:rlDisableDepthMask, [], :void],
      [:rlEnableBackfaceCulling, [], :void],
      [:rlDisableBackfaceCulling, [], :void],
      [:rlSetCullFace, [:int], :void],
      [:rlEnableScissorTest, [], :void],
      [:rlDisableScissorTest, [], :void],
      [:rlScissor, [:int, :int, :int, :int], :void],
      [:rlEnableWireMode, [], :void],
      [:rlDisableWireMode, [], :void],
      [:rlSetLineWidth, [:float], :void],
      [:rlGetLineWidth, [], :float],
      [:rlEnableSmoothLines, [], :void],
      [:rlDisableSmoothLines, [], :void],
      [:rlEnableStereoRender, [], :void],
      [:rlDisableStereoRender, [], :void],
      [:rlIsStereoRenderEnabled, [], :bool],
      [:rlClearColor, [:uchar, :uchar, :uchar, :uchar], :void],
      [:rlClearScreenBuffers, [], :void],
      [:rlCheckErrors, [], :void],
      [:rlSetBlendMode, [:int], :void],
      [:rlSetBlendFactors, [:int, :int, :int], :void],
      [:rlSetBlendFactorsSeparate, [:int, :int, :int, :int, :int, :int], :void],
      [:rlglInit, [:int, :int], :void],
      [:rlglClose, [], :void],
      [:rlLoadExtensions, [:pointer], :void],
      [:rlGetVersion, [], :int],
      [:rlSetFramebufferWidth, [:int], :void],
      [:rlGetFramebufferWidth, [], :int],
      [:rlSetFramebufferHeight, [:int], :void],
      [:rlGetFramebufferHeight, [], :int],
      [:rlGetTextureIdDefault, [], :uint],
      [:rlGetShaderIdDefault, [], :uint],
      [:rlGetShaderLocsDefault, [], :pointer],
      [:rlLoadRenderBatch, [:int, :int], RlRenderBatch.by_value],
      [:rlUnloadRenderBatch, [RlRenderBatch.by_value], :void],
      [:rlDrawRenderBatch, [:pointer], :void],
      [:rlSetRenderBatchActive, [:pointer], :void],
      [:rlDrawRenderBatchActive, [], :void],
      [:rlCheckRenderBatchLimit, [:int], :bool],
      [:rlSetTexture, [:uint], :void],
      [:rlLoadVertexArray, [], :uint],
      [:rlLoadVertexBuffer, [:pointer, :int, :bool], :uint],
      [:rlLoadVertexBufferElement, [:pointer, :int, :bool], :uint],
      [:rlUpdateVertexBuffer, [:uint, :pointer, :int, :int], :void],
      [:rlUpdateVertexBufferElements, [:uint, :pointer, :int, :int], :void],
      [:rlUnloadVertexArray, [:uint], :void],
      [:rlUnloadVertexBuffer, [:uint], :void],
      [:rlSetVertexAttribute, [:uint, :int, :int, :bool, :int, :pointer], :void],
      [:rlSetVertexAttributeDivisor, [:uint, :int], :void],
      [:rlSetVertexAttributeDefault, [:int, :pointer, :int, :int], :void],
      [:rlDrawVertexArray, [:int, :int], :void],
      [:rlDrawVertexArrayElements, [:int, :int, :pointer], :void],
      [:rlDrawVertexArrayInstanced, [:int, :int, :int], :void],
      [:rlDrawVertexArrayElementsInstanced, [:int, :int, :pointer, :int], :void],
      [:rlLoadTexture, [:pointer, :int, :int, :int, :int], :uint],
      [:rlLoadTextureDepth, [:int, :int, :bool], :uint],
      [:rlLoadTextureCubemap, [:pointer, :int, :int], :uint],
      [:rlUpdateTexture, [:uint, :int, :int, :int, :int, :int, :pointer], :void],
      [:rlGetGlTextureFormats, [:int, :pointer, :pointer, :pointer], :void],
      [:rlGetPixelFormatName, [:uint], :pointer],
      [:rlUnloadTexture, [:uint], :void],
      [:rlGenTextureMipmaps, [:uint, :int, :int, :int, :pointer], :void],
      [:rlReadTexturePixels, [:uint, :int, :int, :int], :pointer],
      [:rlReadScreenPixels, [:int, :int], :pointer],
      [:rlLoadFramebuffer, [:int, :int], :uint],
      [:rlFramebufferAttach, [:uint, :uint, :int, :int, :int], :void],
      [:rlFramebufferComplete, [:uint], :bool],
      [:rlUnloadFramebuffer, [:uint], :void],
      [:rlLoadShaderCode, [:pointer, :pointer], :uint],
      [:rlCompileShader, [:pointer, :int], :uint],
      [:rlLoadShaderProgram, [:uint, :uint], :uint],
      [:rlUnloadShaderProgram, [:uint], :void],
      [:rlGetLocationUniform, [:uint, :pointer], :int],
      [:rlGetLocationAttrib, [:uint, :pointer], :int],
      [:rlSetUniform, [:int, :pointer, :int, :int], :void],
      [:rlSetUniformMatrix, [:int, Matrix.by_value], :void],
      [:rlSetUniformSampler, [:int, :uint], :void],
      [:rlSetShader, [:uint, :pointer], :void],
      [:rlLoadComputeShaderProgram, [:uint], :uint],
      [:rlComputeShaderDispatch, [:uint, :uint, :uint], :void],
      [:rlLoadShaderBuffer, [:uint, :pointer, :int], :uint],
      [:rlUnloadShaderBuffer, [:uint], :void],
      [:rlUpdateShaderBuffer, [:uint, :pointer, :uint, :uint], :void],
      [:rlBindShaderBuffer, [:uint, :uint], :void],
      [:rlReadShaderBuffer, [:uint, :pointer, :uint, :uint], :void],
      [:rlCopyShaderBuffer, [:uint, :uint, :uint, :uint, :uint], :void],
      [:rlGetShaderBufferSize, [:uint], :uint],
      [:rlBindImageTexture, [:uint, :uint, :int, :bool], :void],
      [:rlGetMatrixModelview, [], Matrix.by_value],
      [:rlGetMatrixProjection, [], Matrix.by_value],
      [:rlGetMatrixTransform, [], Matrix.by_value],
      [:rlGetMatrixProjectionStereo, [:int], Matrix.by_value],
      [:rlGetMatrixViewOffsetStereo, [:int], Matrix.by_value],
      [:rlSetMatrixProjection, [Matrix.by_value], :void],
      [:rlSetMatrixModelview, [Matrix.by_value], :void],
      [:rlSetMatrixProjectionStereo, [Matrix.by_value, Matrix.by_value], :void],
      [:rlSetMatrixViewOffsetStereo, [Matrix.by_value, Matrix.by_value], :void],
      [:rlLoadDrawCube, [], :void],
      [:rlLoadDrawQuad, [], :void],
    ]
    entries.each do |entry|
      begin
        attach_function entry[0], entry[0], entry[1], entry[2]
      rescue FFI::NotFoundError => error
        $stderr.puts("[Warning] Failed to import #{entry[0]} (#{error}).") if output_error
      end
    end
  end

end

